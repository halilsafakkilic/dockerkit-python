version: "3.9"
   
services:
  web:
    image: nginx:alpine
    volumes:
      - "./src/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "./src/ssl:/etc/ssl"
      - "./code/static:/var/www/html"
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOST=${NGINX_HOST}
    command: nginx -g 'daemon off;'
    restart: always
    depends_on:
      - python
    networks:
      - pythonLocalNetwork
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - pythonLocalNetwork
  python:
    build:
      context: .
      dockerfile:  ./src/python/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    #command: gunicorn --bind 0.0.0.0:8000 firstApp.wsgi --workers 3 --timeout 120 --log-level=debug
    volumes:
      - ./code:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - pythonLocalNetwork
  redis:
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    container_name: redis
    volumes:
      - ./src/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./data/redis:/data
    networks:
      - pythonLocalNetwork
networks:
 pythonLocalNetwork:
  driver: bridge
